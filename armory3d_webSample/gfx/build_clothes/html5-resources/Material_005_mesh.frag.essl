#version 100
#extension GL_EXT_draw_buffers : require
precision mediump float;
precision highp int;

varying highp vec3 wnormal;

highp vec2 octahedronWrap(highp vec2 v)
{
    return (vec2(1.0) - abs(v.yx)) * vec2((v.x >= 0.0) ? 1.0 : (-1.0), (v.y >= 0.0) ? 1.0 : (-1.0));
}

highp float packFloat(highp float f1, highp float f2)
{
    highp float index = floor(f1 * 100.0);
    highp float alpha = clamp(f2, 0.0, 0.999000012874603271484375);
    return index + alpha;
}

void main()
{
    highp vec3 n = normalize(wnormal);
    highp vec3 basecol = vec3(0.18782074749469757080078125);
    highp float roughness = 0.100000001490116119384765625;
    highp float metallic = 0.0;
    highp float occlusion = 1.0;
    n /= vec3((abs(n.x) + abs(n.y)) + abs(n.z));
    highp vec2 _84;
    if (n.z >= 0.0)
    {
        _84 = n.xy;
    }
    else
    {
        _84 = octahedronWrap(n.xy);
    }
    n = vec3(_84.x, _84.y, n.z);
    gl_out[0].gl_FragData = vec4(n.xy, packFloat(metallic, roughness), 1.0 - gl_FragCoord.z);
    gl_out[1].gl_FragData = vec4(basecol, occlusion);
}


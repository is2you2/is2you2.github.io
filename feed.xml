

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://is2you2.github.io/</id>
  <title>그림또따</title>
  <subtitle>오픈소스에 기대어 이것 저것 해봅니다</subtitle>
  <updated>2023-12-13T12:43:13+09:00</updated>
  <author>
    <name>그림또따</name>
    <uri>https://is2you2.github.io/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://is2you2.github.io/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="ko"
    href="https://is2you2.github.io/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator>
  <rights> © 2023 그림또따 </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>동적 프로그래밍 언어</title>
    <link href="https://is2you2.github.io/posts/dynamic-lang/" rel="alternate" type="text/html" title="동적 프로그래밍 언어" />
    <published>2023-12-13T12:39:00+09:00</published>
  
    <updated>2023-12-13T12:39:00+09:00</updated>
  
    <id>https://is2you2.github.io/posts/dynamic-lang/</id>
    <content src="https://is2you2.github.io/posts/dynamic-lang/" />
    <author>
      <name>그림또따</name>
    </author>

  
    
    <category term="정보글" />
    
    <category term="개발" />
    
  

  
    <summary>
      





      이러지 않으려고 했는데
쉬운 언어 위주로 설명글을 남길 것이기 때문에 굳이 이 부분을 적어야할까..? 생각이 들었지만 역시 적어두는 편이 좋겠다고 생각이 들었습니다.
두리뭉실한 언어의 역사라는 느낌으로 슥 읽어보시면 좋을 것 같습니다.
물론 원활한 설명을 위한 거짓말이 포함됩니다.

옛날 옛날에
컴퓨터는 수많은 0, 1로 이루어져있습니다. 그것이 실제로는 전기 신호라 할지라도 숫자 세는건 참 쉽죠.
전기 신호가 들어오는 갯수를 세면 그게 곧 숫자니까요.

근데 사람들은 컴퓨터에서 문자도 출력하고 싶었습니다.
이번에 들어오는 전기 신호는 문자라고 치고, 신호가 65개 들어오면 그건 'A' 인걸로 하자

그렇게 사람들은 특정 숫자를 문자인셈 치는 방법으로 문자 표현할 수 있었습니다.

구분이 필요할 것 같...
    </summary>
  

  </entry>

  
  <entry>
    <title>취미 개발, 쉬운 개발 [2]</title>
    <link href="https://is2you2.github.io/posts/teaching-script-easy-2/" rel="alternate" type="text/html" title="취미 개발, 쉬운 개발 [2]" />
    <published>2023-12-12T17:34:00+09:00</published>
  
    <updated>2023-12-12T17:34:00+09:00</updated>
  
    <id>https://is2you2.github.io/posts/teaching-script-easy-2/</id>
    <content src="https://is2you2.github.io/posts/teaching-script-easy-2/" />
    <author>
      <name>그림또따</name>
    </author>

  
    
    <category term="일상" />
    
    <category term="중얼중얼" />
    
  

  
    <summary>
      





      대상 언어 또는 프로그램 선택하기
본인이 개발과 전혀 무관하다고 생각이 드는 일을 하더라도, 전자기기가 주변에 있을 가능성이 높습니다. 21세기는 그런 세상이니까요 😃

개발 언어를 배우다보면 그동안은 보이지 않았던 일상 생활 속에서 자동화가 가능한 것을, 아니면 좀 더 편하게 처리할 수 있는 것을, 그것도 아니면 그냥 더 재밋는 인생을 위한 어떤 것을 내가 만들 수 있겠노라 하게 됩니다.

그렇게 하려면 이제 무엇을 공부할지 골라야겠네요.
보통의 개발자라면 용처에 맞는 개발 언어가 이미 정해져 있지만,
여러분이 개발을 처음 진입하는 초심자라면…

게임엔진으로 내가 원하는 프로그램 개발


갑작스러운 유턴에 많이 놀라신 것 같은데, 일단 읽어주세요 ^^;
저는 이게 정말로 편한 방법이라고 생각하고 추천...
    </summary>
  

  </entry>

  
  <entry>
    <title>취미 개발, 쉬운 개발 [1]</title>
    <link href="https://is2you2.github.io/posts/teaching-script-easy/" rel="alternate" type="text/html" title="취미 개발, 쉬운 개발 [1]" />
    <published>2023-12-11T07:43:00+09:00</published>
  
    <updated>2023-12-11T07:43:00+09:00</updated>
  
    <id>https://is2you2.github.io/posts/teaching-script-easy/</id>
    <content src="https://is2you2.github.io/posts/teaching-script-easy/" />
    <author>
      <name>그림또따</name>
    </author>

  
    
    <category term="일상" />
    
    <category term="중얼중얼" />
    
  

  
    <summary>
      





      고수준 언어와 취미 개발
고수준 언어는 쉬워요
편하게 개발할 수 있는 쉬운 언어를 고수준 언어라고 합니다.
대표적으로는 파이썬이 있습니다.
print('Hello World!')

요즘 고수준 언어는 코드 결과물을 예측할 수 있는 가독성과 자료 관리를 용이하게 해주는 객체(Object)식 구성을 제공하여 편하게 코딩할 수 있습니다.

같은 고수준 언어지만 만들어진지 시간 좀 지난, 자바정도만 되어도 사용자가 알아야하는 개념이 더 많아지게 되는데
class HelloWorld {
    public static void main(String[] args) {
        System.out.println("Hello World!"); 
    }
}

우… 겨우 취미로 무언가 만들겠다는데 이렇게 부담스...
    </summary>
  

  </entry>

  
  <entry>
    <title>[초심자모드] 개발을 시작하기 전에</title>
    <link href="https://is2you2.github.io/posts/before-start-scripting/" rel="alternate" type="text/html" title="[초심자모드] 개발을 시작하기 전에" />
    <published>2023-12-10T11:33:00+09:00</published>
  
    <updated>2023-12-10T11:33:00+09:00</updated>
  
    <id>https://is2you2.github.io/posts/before-start-scripting/</id>
    <content src="https://is2you2.github.io/posts/before-start-scripting/" />
    <author>
      <name>그림또따</name>
    </author>

  
    
    <category term="정보글" />
    
    <category term="개발" />
    
  

  
    <summary>
      





      컴퓨터라면 당연히 그래야지
취미 코딩, 쉬운 코딩으로 작업하는 동안 컴퓨터는 반드시 이렇게 동작할 예정입니다.


  코드는 반드시 왼쪽에서 오른쪽으로, 사람이 글을 읽듯 순서대로 동작한다.
  코드는 반드시 위에서 아래로, 순서대로 동작한다.
  코드가 최적의 상태로 작성되어있는지 검토하고 싶다면 컴퓨터가 하는 일을 사람이 직접한다고 가정해보자.
  컴퓨터는 거짓말을 하지 않는다. 무언가 오류가 있다면 전적으로 내가 뭘 잘못 구성한 것이다.


이 규칙은 매우 편리하고 안정적이나 멀티쓰레드 코딩을 시작할 때즈음부터 어긋나기 시작합니다.
겁낼 것 없습니다. 멀티쓰레드가 처음에는 정말 골치 아픈데 그 아픈 값어치를 해줍니다.

어딜 감히 드라마를 가지고 와
드라마에서 나왔던 개발자의 모습이 머리를 스칩니...
    </summary>
  

  </entry>

  
  <entry>
    <title>도커에 GUI 작업 환경 구성</title>
    <link href="https://is2you2.github.io/posts/vncserver-docker/" rel="alternate" type="text/html" title="도커에 GUI 작업 환경 구성" />
    <published>2023-12-09T08:40:00+09:00</published>
  
    <updated>2023-12-09T08:40:00+09:00</updated>
  
    <id>https://is2you2.github.io/posts/vncserver-docker/</id>
    <content src="https://is2you2.github.io/posts/vncserver-docker/" />
    <author>
      <name>그림또따</name>
    </author>

  
    
    <category term="정보글" />
    
    <category term="작업환경" />
    
  

  
    <summary>
      





      가상 네트워크 컴퓨팅
GUI가 필요할 것 같아..
분리된 작업 환경까진 좋았지만 오직 CLI로만 작업을 해야하다보니 파일 하나 옮기는 것도 번거로워지고, 코드 서버를 통해서 작업하는 것도 한계가 있는데 이를 어찌합니까 싶으신가요?
잘 오셨습니다 ^^

참고로 이 글은 우분투 공식 문서를 참조하고 있으며, 공식 문서의 내용처럼 AWS와 같은 CLI 환경에서 동일하게 동작합니다.

우분투 문서 원문보기

근데 이거하면 뭐가 좋아요?
다소 제한적이긴 하지만 원래라면 CLI로 하기 어려운 일들을 쉽게 해낼 수 있게 됩니다.
예를 들면 도커에서 안드로이드 스튜디오를 실행하고, 앱 빌드 작업을 진행할 수도 있습니다.

데스크탑 환경 설치하기
아래 설치는 굉장히 오래 걸리고 설치 중간에 사용자가 입력해야하는 내용이...
    </summary>
  

  </entry>

</feed>


